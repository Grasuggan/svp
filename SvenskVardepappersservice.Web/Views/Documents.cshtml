@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.Documents>
@using Lucene.Net.Index
@using ContentModels = Umbraco.Web.PublishedModels;
@using System.Globalization
@{
    Layout = "Master.cshtml";
    var documents = Model.Children<Document>().Where(x => x.IsVisible()).ToList();

    var page = 1;
    var requestQuery = Request["page"];
    if (requestQuery != null)
    {
        page = int.Parse(requestQuery);
    }

    int takePerPage = Model.ItemsPerPage != 0 ? Model.ItemsPerPage : 6;
    var numberOfPagesDecimal = Convert.ToDecimal(documents.Count) / takePerPage;
    var numberOfPagesInt = int.Parse(Math.Ceiling(numberOfPagesDecimal).ToString(CultureInfo.InvariantCulture));

    var pagesToSkip = takePerPage * (page - 1);
    documents = documents.Skip(pagesToSkip).Take(takePerPage).ToList();
}


<div class="main-section__heading">
    <h1>@Model.Name</h1>
    @if (numberOfPagesInt > 1)
    {
        <p>@Umbraco.GetDictionaryValue("site") @page/@numberOfPagesInt</p>
    }
</div>

@foreach (var document in documents)
{
    if (document.UploadFile != null)
    {
        var fileUrl = document.UploadFile;
        var suffix = fileUrl.Substring(fileUrl.LastIndexOf('.') + 1);
        var fileName = fileUrl.Substring(fileUrl.LastIndexOf('/') + 1);
        <div class="list-container files">
            <div class="list-container__content">
                <div class="pre-head">

                    @document.Value("Date", fallback: Fallback.ToDefaultValue, defaultValue: document.CreateDate).ToString("d MMMM yyyy")
                </div>
                <h2>@document.Name</h2>
                <p>
                    @document.Description
                </p>
            </div>

            <a href="@fileUrl" class="file-container" download>
                @if (suffix == "doc" || suffix == "pdf" || suffix == "pptx" || suffix == "xlsx")
                {
                    var src = "/assets/Icons/file-" + suffix + ".svg";
                    <img src="@src" alt="" />
                }
                else if (suffix == "txt" || suffix == "odt" || suffix.Contains("doc"))
                {

                    <img src="/assets/Icons/file-doc.svg" alt="" />
                }
                else if (suffix.Contains("xl"))
                {

                    <img src="/assets/Icons/file-xlsx.svg" alt="" />
                }
                else if (suffix.Contains("pp") || suffix.Contains("tif") || suffix.Contains("odp"))
                {

                    <img src="/assets/Icons/file-xlsx.svg" alt="" />
                }
                else
                {

                    <img src="/assets/Icons/file-pdf.svg" alt="" />
                }
                @if (document.Tooltip != "")
                {
                    <div class="info-popup">
                        @document.Tooltip
                    </div>
                }

            </a>
        </div>
    }
}
@if (numberOfPagesInt > 1)
{
    <div class="page-count">

        <a href="@(Model.Url)?page=@(page-1)" class="prev @(page == 1 ? "invisible" : "")">
            <img src="/assets/Icons/ctrl-left.svg" />
            <span>
                @Umbraco.GetDictionaryValue("previous")
            </span>
        </a>

        <ul class="hide-m">
            @for (var i = 1; i <= numberOfPagesInt; i++)
            {
                <li class="@(i == page ? "selected" : "")">
                    <a title="Go to page @i" href="@(Model.Url)?page=@i">@i</a>
                </li>
            }
        </ul>


        <a href="@(Model.Url)?page=@(page+1)" class="next @(page == numberOfPagesInt ? "invisible" : "")">
            <span>@Umbraco.GetDictionaryValue("next")</span>
            <img src="/assets/Icons/ctrl-right.svg" />
        </a>

    </div>

    <div class="page-count show-m">
        <ul>
            @for (var i = 1; i <= numberOfPagesInt; i++)
            {
                <li class="@(i == page ? "selected" : "")">
                    <a title="Go to page @i" href="@(Model.Url)?page=@i">@i</a>
                </li>
            }
        </ul>
    </div>

}